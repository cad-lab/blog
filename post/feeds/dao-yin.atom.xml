<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CADLab (虎尾科大MDE)</title><link href="http://cadlab.mde.tw/post/" rel="alternate"></link><link href="http://cadlab.mde.tw/post/feeds/dao-yin.atom.xml" rel="self"></link><id>http://cadlab.mde.tw/post/</id><updated>2017-03-15T23:32:18+08:00</updated><entry><title>常用 Python3 程式模組</title><link href="http://cadlab.mde.tw/post/chang-yong-python3-cheng-shi-mo-zu.html" rel="alternate"></link><published>2017-03-15T23:32:18+08:00</published><updated>2017-03-15T23:32:18+08:00</updated><author><name>kmol</name></author><id>tag:cadlab.mde.tw,2017-03-15:post/chang-yong-python3-cheng-shi-mo-zu.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.cherrypy.org/"&gt;CherryPy&lt;/a&gt;, &lt;a href="http://pytz.sourceforge.net/"&gt;pytz&lt;/a&gt;, &lt;a href="http://www.makotemplates.org/"&gt;mako&lt;/a&gt;, &lt;a href="https://www.crummy.com/software/BeautifulSoup/"&gt;beautifulsoup4&lt;/a&gt;, &lt;a href="https://github.com/PyMySQL/PyMySQL"&gt;pymysql&lt;/a&gt;, &lt;a href="https://github.com/coleifer/peewee"&gt;peewee&lt;/a&gt;, &lt;a href="https://github.com/sigmavirus24/github3.py"&gt;github3.py&lt;/a&gt;, &lt;a href="http://peterhudec.github.io/authomatic/"&gt;authomatic&lt;/a&gt; 等是 CADLab 網際程式開發流程中較常用的 Python3 模組.&lt;/p&gt;


&lt;p&gt;其中的 &lt;a href="http://www.cherrypy.org/"&gt;CherryPy&lt;/a&gt; 與 &lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; 位階相似, 但是
特性卻有很大差別, CherryPy 小而自給自足, Flask 則架構較具彈性, 許多延伸功能都採 extension 方式補足, 有關 CherryPy 的各種用法, 請參考 &lt;a href="http://cad-lab.github.io/manual/post/cherrypy-shi-yong-shou-ce.html"&gt;http://cad-lab.github.io/manual/post/cherrypy-shi-yong-shou-ce.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/zzzeek/mako"&gt;https://github.com/zzzeek/mako&lt;/a&gt; 的最大特色, 是將 Python 的語法直接放到 template 文件中, 儘管如此可能會讓使用者將原本應該放在控制端的資料流程, 分散到展示端, 但是實際採用後, 也沒有發生太大問題, 反而可以利用相同的網際程式, 直接套用到 Mako 與 Flask 內建的 template 語法中, 進行比較.&lt;/p&gt;
&lt;p&gt;github3.py 針對 Github 倉儲新增協同者的程式片斷範例:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
@app.route('/yourrepoadd', methods=['POST'])
def yourrepoadd():
    account = request.form["account"]
    repository = "yourrepo"
    url = "https://github.com/youraccount/yourrepo.git"
    # 登入系統
    g = github3.login("youraccount", "yourpassword")
    # 以下則新增協同者
    #g.repository(倉儲帳號, 倉儲名稱).add_collaborator(協同者 github 帳號)
    # 若新增 collaborator 成功傳回 True 否則傳回 False
    if g.repository("youraccount", repository).add_collaborator(account):
        # 共同使用 cpaadd.html
        return render_template("cpaadd.html", account=account, repository=repository, url=url)
    else:
        return render_template("cpaerror.html")
&lt;/pre&gt;

&lt;p&gt;至於 authomatic 的使用, 共有3個步驟:&lt;/p&gt;
&lt;h2&gt;1. 取得 key 與 secret&lt;/h2&gt;
&lt;p&gt;設定網址:&lt;/p&gt;
&lt;p&gt;https://console.developers.google.com&lt;/p&gt;
&lt;p&gt;總共有兩項設定:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;啟用 Google + API&lt;/li&gt;
&lt;li&gt;然後到憑證處建立專案, 設定授權的 URI&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;設定目的在希望透過 Google+ API 讓 Web browser (Javascript) 能夠擷取 User data, 這時需要的是 Create an OAuth 2.0 client ID, 建立專案後, 必須選擇 Authorized Javascript origins 為 http://your.server.domain.name 與 http://localhost:5000, 而 Authorized redirect URIs 為: http://your.server.domain.name/autho_login/google/ 與 http://localhost:5000/autho_login/google/&lt;/p&gt;
&lt;h2&gt;2. 導入模組, 進行設定&lt;/h2&gt;
&lt;pre class="brush: python"&gt;
import authomatic
from authomatic.providers import oauth2

CONFIG = {
        'google': {
            'class_': oauth2.Google,
            'consumer_key': '1234567.apps.googleusercontent.com',
            'consumer_secret': '87654321',
            #'scope': oauth2.Google.user_info_scope
            # 以下只允許(瞭解您在 Google 上的身分)與(檢視電子郵件地址)
            'scope': ['email']
        }
    }
&lt;/pre&gt;

&lt;h2&gt;3. 配合建立登入連結&lt;/h2&gt;
&lt;pre class="brush: python"&gt;
@app.route('/autho_login/&amp;lt;provider_name&amp;gt;/', methods=['GET', 'POST'])
def autho_login(provider_name):

    # We need response object for the WerkzeugAdapter.
    response = make_response()

    # Log the user in, pass it the adapter and the provider name.
    result = authomatic.login(WerkzeugAdapter(request, response), provider_name)

    # If there is no LoginResult object, the login procedure is still pending.
    if result:
        if result.user:
            # We need to update the user to get more info.
            result.user.update()

        # 利用 session 登記登入者的 email
        session['login_email'] = result.user.email

        # 這裡必須分近端與雲端, 因為 google logout redirect 的 url 不同
        if 'OPENSHIFT_REPO_DIR' in os.environ.keys():
            # 表示程式在雲端執行
            local = False
        else:
            # 表示在近端執行
            local = True
        # The rest happens inside the template.
        return render_template('autho_login.html', result=result, local=local)

    # Don't forget to return the response.
    return response
&lt;/pre&gt;

&lt;h2&gt;oauth2 登入的情境&lt;/h2&gt;
&lt;p&gt;使用 oauth2 的目的, 在利用既有的使用者帳號進行應用程式的登入, 例如, 使用 facebook 或 gmail 帳號登入到我們所開發的網際應用程式, 好處是, 使用者無需在各類網際程式中額外再申請帳號, 而程式開發者也可以免去管理使用者帳號的難題.&lt;/p&gt;
&lt;p&gt;但是, 為了在使用者被 oauth2 協定轉介到 gmail 登入頁面, 完成登入後, 就會再帶著帳號擁有者所允許的相關訊息, 回到網際應用程式中, 通常這些網際程式會利用 session 與 cookie 來儲存使用者登入的身份資料, 如此一來, 便有以下情境:&lt;/p&gt;
&lt;p&gt;假如使用者在選擇登入到網際程式之前, 已經登入到 gmail, 那麼使用者無需再輸入帳號密碼, 只要同意允許擷取帳號資料 ,就會直接跳轉到網際程式功能中, 特別注意到, 這時 gmail 有使用者登入的 session 與 cookie, 而且使用者的瀏覽器還存在登入到網際應用程式的狀態.&lt;/p&gt;
&lt;p&gt;第2種情況則是, 使用者被轉介到 gmail 登入畫面時, 才輸入帳號密碼登入, 之後情境就與上述第1種情況相同.&lt;/p&gt;
&lt;p&gt;上述兩種情況, 在瀏覽器中, 使用者的狀態是同時登入到 gmail 與網際程式中, 即便使用者登入網際程式後, 若使用者沒有主動登出 gmail, 這位使用者在瀏覽器的狀態中, 仍然保持登入到 gmail 的狀態.&lt;/p&gt;
&lt;p&gt;因此第3種情況則是, 使用者經由 oauth2 協定轉介到 gmail 登入後同意讓網際程式擷取帳號資料後, 就能登入到網際程式中, 隨後使用者主動登出 gmail, 並不會影響仍然登入到網際程式中的狀態, 一直到使用者選擇登出網際應用程式為止.&lt;/p&gt;
&lt;p&gt;理論上, 假如我們所開發的網際程式, 只是透過一系列上述的設定, 藉由 gmail 的帳號, 來登入我們所開發的網際程式, 比較好的作法是一旦完成我們網際應用程式的登入後, 可以經由程式方法登出使用者的 gmail 帳號, 然後再由使用者決定何時要登出我們所開發的網際程式.&lt;/p&gt;</summary><category term="Python3"></category><category term="module"></category></entry><entry><title>讓 Virtualbox 虛擬機器隨主機啟動</title><link href="http://cadlab.mde.tw/post/rang-virtualbox-xu-ni-ji-qi-sui-zhu-ji-qi-dong.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>Cad Lab</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/rang-virtualbox-xu-ni-ji-qi-sui-zhu-ji-qi-dong.html</id><summary type="html">&lt;p&gt;目前所使用的 Virtualbox 主體分別是 Windows 7 與 Ubuntu 14.04/16.04 等, 在 Windows 7 的虛擬機器可以透過 &lt;a href="http://vboxvmservice.sourceforge.net/"&gt;http://vboxvmservice.sourceforge.net/&lt;/a&gt;, 讓特定虛擬機器 (virtual machine), 隨著 Host 電腦的開啟而以 service 的方式啟用. 至於在 Ubuntu 14.04 或 16.04 操作系統中, 則可以在 /etc/init.d/ 目錄下建立一個啟動程序, 然後讓電腦在開關機時執行, 主要的指令是開機時, 利用 VBoxHeadless 啟動個別的虛擬機器, 且在關機時, 利用 VBoxManage controlvm 儲存各虛擬機器的運行狀態.&lt;/p&gt;


&lt;p&gt;StartVM 檔案的內容如下, 分別控制三台虛擬機器:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
#! /bin/sh
# /etc/init.d/StartVM

VMUSER=yen
VMNAME1="Ubuntu_1604_8888"
VMNAME2="Ubuntu_1604_6666"
VMNAME3="Ubuntu_1404_4444"

case "$1" in
start)
echo "Starting VirtualBox VM..."
sudo -H -b -u $VMUSER /usr/bin/VBoxHeadless -startvm "$VMNAME1"
sudo -H -b -u $VMUSER /usr/bin/VBoxHeadless -startvm "$VMNAME2"
sudo -H -b -u $VMUSER /usr/bin/VBoxHeadless -startvm "$VMNAME3"
;;
stop)
echo "Saving state of Virtualbox VM..."
sudo -H -u  $VMUSER /usr/bin/VBoxManage controlvm "$VMNAME1" savestate
sudo -H -u  $VMUSER /usr/bin/VBoxManage controlvm "$VMNAME2" savestate
sudo -H -u  $VMUSER /usr/bin/VBoxManage controlvm "$VMNAME3" savestate
;;
*)
echo "Usage: /etc/init.d/StartVM {start|stop}"
exit 1
;;
esac

exit 0
&lt;/pre&gt;

&lt;p&gt;接著讓 StartVM 程序檔案可以執行:&lt;/p&gt;
&lt;p&gt;sudo chmod +x /etc/init.d/StartVM&lt;/p&gt;
&lt;p&gt;最後則是將 StartVM 納入開機程序中:&lt;/p&gt;
&lt;p&gt;sudo update-rc.d StartVM defaults 99 01&lt;/p&gt;
&lt;p&gt;有關 update-rc.d 用法說明: &lt;a href="http://manpages.ubuntu.com/manpages/precise/man8/update-rc.d.8.html"&gt;http://manpages.ubuntu.com/manpages/precise/man8/update-rc.d.8.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;sudo update-rc.d StartVM defaults 99 01 指令表示利用 super user 的權限執行 update-rc.d 指令, 並且讓 StartVM 程序以第 99 編號次序執行 StartVM 中的 start (以開機啟動順位排序最後的方式執行, 有效編號從 00 到 99), 而 01 則表示要求以排序編號 01 的方式執行 StartVM 中的 stop 程序. 通常 update-rc.d 中使用的 start 與 stop runlevel 編號, 是最後啟動的程序要先執行 stop (兩者相加總數為 100), 詳細說明請參考: &lt;a href="https://help.ubuntu.com/community/UbuntuBootupHowto"&gt;https://help.ubuntu.com/community/UbuntuBootupHowto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;參考資料: &lt;a href="http://askubuntu.com/questions/57220/start-vboxheadless-vm-at-startup"&gt;http://askubuntu.com/questions/57220/start-vboxheadless-vm-at-startup&lt;/a&gt;&lt;/p&gt;</summary><category term="cadlab"></category><category term="Virtualbox"></category><category term="虛擬機器"></category></entry><entry><title>Tinymce4 使用導引</title><link href="http://cadlab.mde.tw/post/tinymce4-shi-yong-dao-yin.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>Cad Lab</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/tinymce4-shi-yong-dao-yin.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.tinymce.com/"&gt;https://www.tinymce.com/&lt;/a&gt; 版本為 4.3.13 community 版本, 使用授權為 Open Source LGPL 2.1.&lt;/p&gt;


&lt;h3&gt;啟用 Tinymce4&lt;/h3&gt;
&lt;p&gt;導入 Tinymce4 Javascript 程式庫, 然後啟動:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
&amp;lt;script src='//cdn.tinymce.com/4/tinymce.min.js'&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;tinymce.init({ selector:'textarea' });&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;p&gt;有關 tinymce4 的啟動:&lt;/p&gt;
&lt;pre class="brush: jscript"&gt;
&amp;lt;script&amp;gt;
tinymce.init({
  selector: "textarea",
  height: 500,
  plugins: [
    "advlist autolink autosave link image lists charmap print preview hr anchor pagebreak spellchecker",
    "searchreplace wordcount visualblocks visualchars code fullscreen insertdatetime media nonbreaking",
    "table contextmenu directionality emoticons template textcolor paste textcolor colorpicker textpattern"
  ],

  toolbar1: "newdocument fullpage | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | styleselect formatselect fontselect fontsizeselect",
  toolbar2: "cut copy paste | searchreplace | bullist numlist | outdent indent blockquote | undo redo | link unlink anchor image media code | insertdatetime preview | forecolor backcolor",
  toolbar3: "table | hr removeformat | subscript superscript | charmap emoticons | print fullscreen | ltr rtl | spellchecker | visualchars visualblocks nonbreaking template pagebreak restoredraft",

  menubar: false,
  toolbar_items_size: 'small',

  style_formats: [{
    title: 'Bold text',
    inline: 'b'
  }, {
    title: 'Red text',
    inline: 'span',
    styles: {
      color: '#ff0000'
    }
  }, {
    title: 'Red header',
    block: 'h1',
    styles: {
      color: '#ff0000'
    }
  }, {
    title: 'Example 1',
    inline: 'span',
    classes: 'example1'
  }, {
    title: 'Example 2',
    inline: 'span',
    classes: 'example2'
  }, {
    title: 'Table styles'
  }, {
    title: 'Table row 1',
    selector: 'tr',
    classes: 'tablerow1'
  }],

  templates: [{
    title: 'Test template 1',
    content: 'Test 1'
  }, {
    title: 'Test template 2',
    content: 'Test 2'
  }],
  content_css: [
    '//fast.fonts.net/cssapi/e6dc9b99-64fe-4292-ad98-6974f93cd2a2.css',
    '//www.tinymce.com/css/codepen.min.css'
  ]
});
&amp;lt;/script&amp;gt;
&lt;/pre&gt;

&lt;p&gt;這裡在將 CMSimply 中的 Tinymce3 改為 Tinymce4 的過程有一點必須注意, 因為 CMSimply 中的各頁面編輯所傳回的 html 並不需要 fullpage plugin, 因此導入 Tinyme4 時就必須避開 fullpage 的使用.&lt;/p&gt;</summary><category term="cadlab"></category><category term="html editor"></category><category term="tinymce"></category></entry><entry><title>Ubuntu 16.04, Windows 7 與 Windows 10 虛擬機器</title><link href="http://cadlab.mde.tw/post/ubuntu-1604-windows-7-yu-windows-10-xu-ni-ji-qi.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>Cad Lab</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/ubuntu-1604-windows-7-yu-windows-10-xu-ni-ji-qi.html</id><summary type="html">&lt;p&gt;Ubuntu 16.04 剛推出兩個月, Windows 10 則推出將近滿一年, 這兩個號稱創新度高的電腦操作系統, 經過幾個禮拜密集的測試, 在今年暑假即將更新的電腦輔助設計室所採購的電腦中, 初步決定都不積極採用, 而只在虛擬機器中提供測試之用.&lt;/p&gt;


&lt;p&gt;當然我們必須承認, 問題出在我們迎接創新的速度不足, 現有整體環境沒有辦法迎接這兩種"最新"的操作系統.&lt;/p&gt;
&lt;p&gt;兩年多前從 Ubuntu 12.04 轉到 14.04 的過程, 或者 5 年多前從 XP 轉進 Windows 7 時, 也面臨過類似的問題, 但是感覺問題都很容易解決, 只是這次之所以捨棄全面提升到 Ubuntu 16.04, 問題出在 AMD 陣營中的 libGL 程式庫驅動程式老舊, 導致 X-Windows 無法 remote 帶回瀏覽器, 至於 Windows 10 在非觸控螢幕的電腦上感覺操作效能提升不大, 但是必須額外配合新介面與並不實用的許多即時服務, 所花費的代價實在太高, 因此作罷.&lt;/p&gt;
&lt;p&gt;另外一個讓我們決定不採用 Windows 10 與 Ubuntu 16.04 作為主要操作系統的原因是, 機械設計工程系正要逐步將已經使用多年的 IPV4 環境, 換轉到 IPV6 與 IPV4 混用的環境, 所遭遇的問題已經夠多, 因此決定在新電腦安裝 Windows 7 專業版, 並且在其中利用 Virtualbox 配置 Windows 7, Windows 10, Ubuntu 14.04 與 Ubuntu 16.04 虛擬機器, 讓使用者可以在虛實整合的環境中配置各種機械設計相關的網路環境.&lt;/p&gt;
&lt;h3&gt;Python3, Git 與 Leo Editor&lt;/h3&gt;
&lt;p&gt;機械設計工程系目前的計算機程式、網際內容管理、電腦輔助設計實習與協同產品設計實習等課程, 強調以數位運算方法來協助解決問題的工具, 包含 Python3, Git 與 Leo Editor.&lt;/p&gt;
&lt;p&gt;在 Windows 64 位元環境中, 我們已經製作了一套可攜的 Python3 程式環境, 其中還包括 Git 與 Leo Editor, 使用者只要 git clone https://github.com/chiamingyen/kmol2016.git 就可以取得, 但前提是使用者的 Windows 環境必須要有 git 工具, 可以從 &lt;a href="https://github.com/git-for-windows/git/releases"&gt;https://github.com/git-for-windows/git/releases&lt;/a&gt; 下載.&lt;/p&gt;
&lt;p&gt;假如是在 Ubuntu 14.04 或 16.04 環境中, 使用純 IPV6 網路協定上網, 而 apt-get, pip3 或 git 等指令, 可能就必須要設定支援 IPV4/IPV6 的代理主機, 才能正確執行.&lt;/p&gt;
&lt;h3&gt;Git 使用代理主機&lt;/h3&gt;
&lt;p&gt;git 在純 IPV6 協定下使用代理主機的設定如下:&lt;/p&gt;
&lt;p&gt;git config --global http.proxy http://[2001:288:6004:17::17]:3128&lt;/p&gt;
&lt;p&gt;git config --global https.proxy http://[2001:288:6004:17::17]:3128&lt;/p&gt;
&lt;h3&gt;apt 使用代理主機&lt;/h3&gt;
&lt;p&gt;編輯 /etc/apt/apt.conf, 並且納入下列內容:&lt;/p&gt;
&lt;p&gt;Acquire::http::Proxy "http://username:password@your.proxy.server:3128";&lt;/p&gt;
&lt;p&gt;之後就可以安裝 python3-pip 與 python3-pyqt5&lt;/p&gt;
&lt;p&gt;sudo apt install python3-pip&lt;/p&gt;
&lt;p&gt;sudo apt install python3-pyqt5&lt;/p&gt;
&lt;h3&gt;pip3 使用代理主機&lt;/h3&gt;
&lt;p&gt;在支援純 IPV6 協定上網的 Ubuntu 電腦安裝 pip3 與 python3-pyqt5 之後, 就可以接著安裝 Leo Editor, 但是為了安裝 5.1 以上的版本 (才提供 @clean 節點指令的支援), 必須要先以下列指令安裝 Leo Editor 5.0b2 版, 然後再利用 5.3 版的程式碼進行替換即可.&lt;/p&gt;
&lt;p&gt;首先是利用代理主機安裝 leo:&lt;/p&gt;
&lt;p&gt;sudo pip3 --proxy=[2001:288:6004:17::17]:3128 install leo&lt;/p&gt;
&lt;p&gt;假如使用者利用：&lt;/p&gt;
&lt;p&gt;sudo pip3 --proxy=[2001:288:6004:17::17]:3128 install  https://github.com/leo-editor/leo-editor/archive/5.3.zip&lt;/p&gt;
&lt;p&gt;執行 Leo Editor 5.3 版程式碼安裝時, 將會出現以 Python2 進行 setup.py 的錯誤, 處理方式可以採直接修改 Leo Editor 5.3 版的原始碼, 或者安裝完 5.0b2 版之後, 再將 5.3 版的程式碼取代 /usr/local/lib/python3.5/dist-packages/leo 中的內容.&lt;/p&gt;
&lt;p&gt;另外, 利用 pip3 移除模組的指令如下:&lt;/p&gt;
&lt;p&gt;sudo pip3 --proxy=[2001:288:6004:17::17]:3128 uninstall leo&lt;/p&gt;
&lt;p&gt;而在 Ubuntu 16.04 中移除 apt 所安裝的模組, 則必須使用:&lt;/p&gt;
&lt;p&gt;sudo apt remove python3-pyqt4&lt;/p&gt;
&lt;p&gt;完成 Leo Editor 安裝後, 就可以利用 leo&amp;amp; 啟動.&lt;/p&gt;
&lt;h3&gt;純 IPV6 環境下的 wsgi 程式&lt;/h3&gt;
&lt;p&gt;當 Virtualbox 環境下的各虛擬機器, 利用  Bridged 網路設定, 成為一台廣域網路上的伺服器之後, 假如要以 IPV6 網址執行 wsgi 程式, 可以修改 CMSimply 的設定:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
if inOpenshift:
    # operate in OpenShift
    application = cherrypy.Application(root, config = application_conf)
else:
    # operate in localhost
    cherrypy.server.socket_port = 8080
    cherrypy.server.socket_host = '2001:288:6004:17::6666'
    cherrypy.quickstart(root, config = application_conf)
&lt;/pre&gt;

&lt;p&gt;然後透過 http://[2001:288:6004:17::6666]:8080 擷取 CMSimply  wsgi 網際程式, 但是目前的 CMSimply 系統中的 html editor 為 tinymce3, 無法正確解析 IPV6 網址, 因此需要改用最新的 &lt;a href="https://www.tinymce.com/"&gt;tinymce4&lt;/a&gt; 才行.&lt;/p&gt;
&lt;p&gt;但是, 隨著改用 tinymce4, 後續衍生的問題就是必須再將先前已經在 tinymce3 實現的各種 html 上傳檔案與圖片整合的程序, 全部修改為 tinymce4 相容.&lt;/p&gt;
&lt;h3&gt;Virtualbox 虛擬機器採用純 IPV6 結論&lt;/h3&gt;
&lt;p&gt;隨著操作系統版本不斷更新, 而且各單位轉用 IPV6 的需求日益增高, 許多過去所使用的流程與架構都被迫必須修改因應:&lt;/p&gt;
&lt;p&gt;就各純 IPV6 環境架設的虛擬機器, 至少需要以下代理主機設定, 來配合許多僅支援 IPV4 的服務主機:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;git 指令的代理, 使用 git config --global http.proxy http://[2001:288:6004:17::17]:3128&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;apt 或 apt-get 的代理, 必須建立 /etc/apt/apt.conf, 並納入代理主機的設定: Acquire::http::Proxy "http://username:password@your.proxy.server:3128";&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;pip3 的代理, 則採用 sudo pip3 --proxy=[2001:288:6004:17::17]:3128 install leo&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;除了上述的程式安裝代理, 後續還有 sftp 的代理, 工程軟體套件的認証協定, 也都必須配合 IPV4 轉進到 IPV6 逐一處理.&lt;/p&gt;</summary><category term="cadlab"></category><category term="Virtualbox"></category><category term="虛擬機器"></category></entry><entry><title>Virtualbox 的應用與網路設定 (二)</title><link href="http://cadlab.mde.tw/post/virtualbox-de-ying-yong-yu-wang-lu-she-ding-er.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>Cad Lab</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/virtualbox-de-ying-yong-yu-wang-lu-she-ding-er.html</id><summary type="html">&lt;p&gt;透過 Virtualbox 的使用說明: &lt;a href="https://www.virtualbox.org/manual/"&gt;https://www.virtualbox.org/manual/&lt;/a&gt; 可以了解一個 Virtualbox 的虛擬機器, 若啟用 ICH9 Chipset, 最多可以&lt;a href="https://www.virtualbox.org/manual/ch03.html#settings-motherboard"&gt;支援 36 片網路卡&lt;/a&gt;.&lt;/p&gt;


&lt;h3&gt;Virtualbox 虛擬機器最多可以支援 36 片網路卡&lt;/h3&gt;
&lt;p&gt;如下圖所示:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_ich9_36_nic.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;至於 &lt;a href="https://www.virtualbox.org/manual/ch06.html#network_hostonly"&gt;host-only 的網路卡設定&lt;/a&gt; 正好介於 bridged 與 internal 網路設定特性之間. 也就是說 host-only 網路卡設定與 bridged 網路卡設定類似, 可以想像各採用 host-only 設定的虛擬機器與 host 機器的網路線全部接到同一台network switch (網路交換器), 不僅可以彼此連線, 也能與 host 連線. 但是 host-only 網路卡設定與 bridged network 設定的差異是, host-only 無需與任何實體網路卡進行橋接, 而是透過位於 host 機器上的虛擬網路卡達到與各虛擬機器及 host 網路相連的目的. &lt;/p&gt;
&lt;p&gt;而 host-only 網路卡設定與 internal 網路設定類似的地方, 在於這些設定為 host-only 網路卡相連的虛擬機器無法與 host 以外的網路相連.&lt;/p&gt;
&lt;p&gt;另外, 透過 bridged 網路卡設定說明: &lt;a href="https://www.virtualbox.org/manual/ch06.html#network_bridged"&gt;https://www.virtualbox.org/manual/ch06.html#network_bridged&lt;/a&gt;, 我們也可以得知, 所謂虛擬機器的橋接網路連線設定, 就是要讓虛擬機器透過 host 上的實體網路卡, 與外部的網路相連, 成為一台與 host 位階相同的伺服機器.&lt;/p&gt;
&lt;h3&gt;虛擬機器與虛擬硬碟的 uuid 編號&lt;/h3&gt;
&lt;p&gt;至於在使用 Virtualbox 的過程, 當使用者需要設定虛擬機器的 uuid 時, 可以透過下列 Python3 程式產生 uuid.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import uuid
print(uuid.uuid1())
#UUID('5361a11b-615c-42bf-9bdb-e2c3790ada14')
&lt;/pre&gt;

&lt;p&gt;接著再利用:&lt;/p&gt;
&lt;p&gt;VBoxManage startvm "Your VM name", 使用 Virtualbox 指定的 uuid, 或者自行指定虛擬機器的 uuid.&lt;/p&gt;
&lt;p&gt;VBoxManage startvm "Your VM name" 5361a11b-615c-42bf-9bdb-e2c3790ada14&lt;/p&gt;
&lt;p&gt;由於虛擬機器的 uuid 只用於 global configuration data 的設定, 以及各虛擬機器啟動時的基本辨識, 因此也可以直接在設定檔案中更改, 只要前後呼應即可. 但是虛擬硬碟的對應 uuid 則與 .vdi 檔案綁定, 因此根據 &lt;a href="https://www.virtualbox.org/manual/ch08.html#vboxmanage-clonevdi"&gt;https://www.virtualbox.org/manual/ch08.html#vboxmanage-clonevdi&lt;/a&gt; 中的說明, 可以利用:&lt;/p&gt;
&lt;p&gt;VBoxManage clonemedium Master.vdi Clone.vdi&lt;/p&gt;
&lt;p&gt;手動進行 vdi 檔案的複製, 基本概念是存在同一個 host 中的虛擬機器個別要有一個 uuid 編號, 而這個編號會在 host 中所安裝的 Virtualbox 套件中, 經由 preferances 設定檔案與個別虛擬機器引用時進行對應, 至於虛擬硬碟的 uuid, 除了與 .vdi 綁定, 也會在個別虛擬機器的設定檔案中前後出現兩次.&lt;/p&gt;
&lt;p&gt;但是若 Master.vdi 在下 VBoxManage.exe 指令的 Host 機器上, 已經註冊在虛擬機器中, 則必須要先更改虛擬機器的硬碟 .vdi 檔案之後, 才能夠執行 clonemedium 指令:&lt;/p&gt;
&lt;p&gt;也就是必須先執行:&lt;/p&gt;
&lt;p&gt;"c:\Program Files\Oracle\VirtualBox\VBoxManage.exe" internalcommands sethduuid registered_vdi.vdi&lt;/p&gt;
&lt;p&gt;然後再執行:&lt;/p&gt;
&lt;p&gt;"c:\Program Files\Oracle\VirtualBox\VBoxManage.exe" clonemedium registered_vdi.vdi new_vdi.vdi&lt;/p&gt;
&lt;p&gt;之後若在同一個 Virtualbox 的主體中利用此一 new_vdi.vdi 建立虛擬機器, 就不會發生硬碟 uuid 編號重複的問題.&lt;/p&gt;
&lt;p&gt;至於 Global configuration data 檔案的存放位置, 根據 &lt;a href="https://www.virtualbox.org/manual/ch10.html#idm8784"&gt;https://www.virtualbox.org/manual/ch10.html#idm8784&lt;/a&gt; 的說明, 在視窗操作系統會存在 HOME/.VirtualBox 目錄, 以 xml 格式儲存, 在 Linux 與 Solaris 操作系統中, 則儲存在 HOME/.config/VirtualBox 目錄中, 假如是 OS X 操作系統, 則會儲存在 HOME/Library/VirtualBox.&lt;/p&gt;
&lt;p&gt;值得一提的是, 當操作系統中 Virtualbox 沒有開啟時, 使用者可以直接修改上述的相關設定檔案, 例如, Virtualbox 的 GUI 介面中 ,只能讓一個虛擬機器啟用 4 片網路卡, 假如使用者需要啟用第 5 ~ 36 片網路卡時, 可以根據 &lt;a href="https://www.virtualbox.org/manual/ch08.html#idm4023"&gt;https://www.virtualbox.org/manual/ch08.html#idm4023&lt;/a&gt; 的說明, 利用 VBoxManage modifyvm 指令進行設定, 或者直接編輯相關的設定檔案達成.&lt;/p&gt;
&lt;h3&gt;Virtualbox 虛擬機器檔案跨操作系統應用&lt;/h3&gt;
&lt;p&gt;以下則是在 Windows 7 Pro 電腦上啟動 Vt-x, 建立 64 位元的 Windows 7 虛擬機器後, 將虛擬機器檔案轉到 Ubuntu 的 Virtualbox 上, 然後根據上述說明, 啟動 36 片虛擬網路卡的過程畫面:&lt;/p&gt;
&lt;p&gt;首先是從網路上下載 Windows 7 64 位元的虛擬機器檔案壓縮檔, 然後解開壓縮檔, 準備在 Ubuntu 上的 Virtualbox 建立虛擬機器:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/win7_64_on_ubuntu1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著是解開壓縮檔案之後的 Windows 7 虛擬機器檔案, 其中包括 .vdi 與兩個虛擬機器的設定檔:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/win7_64_on_ubuntu2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;利用解開壓縮的 .vdi 檔案, 在 Ubuntu 上的 Virtualbox 建立虛擬機器, 每一個虛擬機器都對應一個 .vdi 檔案與兩個設定檔案:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/win7_64_on_ubuntu3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接下來是 Ubuntu 上的虛擬機器準備開機的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/win7_64_on_ubuntu4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著是虛擬機器在 Ubuntu 上開啟 Windows 7 的畫面, 測試 V-rep, 可攜 Python3 程式環境啟動, 開啟 Leo Editor 與 Jypyter 的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/win7_64_on_ubuntu5.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;最後則是在 Windows 7 虛擬機器中創建 36 張虛擬網路卡的畫面:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/win7_64_on_ubuntu6.png" width="800" /&gt;&lt;/p&gt;
&lt;h3&gt;虛擬機器設定檔案&lt;/h3&gt;
&lt;p&gt;以下則為創建 36 片虛擬網路卡的虛擬機器設定檔案:&lt;/p&gt;
&lt;pre class="brush:html"&gt;
&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;!--
** DO NOT EDIT THIS FILE.
** If you make changes to this file while any VirtualBox related application
** is running, your changes will be overwritten later, without taking effect.
** Use VBoxManage or the VirtualBox Manager GUI to make changes.
--&amp;gt;
&amp;lt;VirtualBox xmlns="http://www.innotek.de/VirtualBox-settings" version="1.14-linux"&amp;gt;
  &amp;lt;Machine uuid="{2d4c505c-6d5c-430b-9e07-e7cc478d3386}" name="test" OSType="Windows7_64" snapshotFolder="Snapshots" lastStateChange="2016-06-18T12:23:49Z"&amp;gt;
    &amp;lt;MediaRegistry&amp;gt;
      &amp;lt;HardDisks&amp;gt;
        &amp;lt;HardDisk uuid="{f03c812c-5a12-496b-bd9a-d235f809d184}" location="/home/amd/VirtualBox VMs/Win7/cadlab_win7_64/cadlab_win7_64.vdi" format="VDI" type="Normal"/&amp;gt;
      &amp;lt;/HardDisks&amp;gt;
      &amp;lt;DVDImages/&amp;gt;
      &amp;lt;FloppyImages/&amp;gt;
    &amp;lt;/MediaRegistry&amp;gt;
    &amp;lt;ExtraData&amp;gt;
      &amp;lt;ExtraDataItem name="GUI/LastGuestSizeHint" value="1835,986"/&amp;gt;
      &amp;lt;ExtraDataItem name="GUI/LastNormalWindowPosition" value="710,284,1835,1008"/&amp;gt;
    &amp;lt;/ExtraData&amp;gt;
    &amp;lt;Hardware version="2"&amp;gt;
      &amp;lt;CPU count="1" hotplug="false"&amp;gt;
        &amp;lt;HardwareVirtEx enabled="true"/&amp;gt;
        &amp;lt;HardwareVirtExNestedPaging enabled="true"/&amp;gt;
        &amp;lt;HardwareVirtExVPID enabled="true"/&amp;gt;
        &amp;lt;HardwareVirtExUX enabled="true"/&amp;gt;
        &amp;lt;PAE enabled="false"/&amp;gt;
        &amp;lt;LongMode enabled="true"/&amp;gt;
        &amp;lt;HardwareVirtExLargePages enabled="false"/&amp;gt;
        &amp;lt;HardwareVirtForce enabled="false"/&amp;gt;
      &amp;lt;/CPU&amp;gt;
      &amp;lt;Memory RAMSize="1024" PageFusion="false"/&amp;gt;
      &amp;lt;HID Pointing="USBTablet" Keyboard="PS2Keyboard"/&amp;gt;
      &amp;lt;HPET enabled="false"/&amp;gt;
      &amp;lt;Chipset type="ICH9"/&amp;gt;
      &amp;lt;Boot&amp;gt;
        &amp;lt;Order position="1" device="Floppy"/&amp;gt;
        &amp;lt;Order position="2" device="DVD"/&amp;gt;
        &amp;lt;Order position="3" device="HardDisk"/&amp;gt;
        &amp;lt;Order position="4" device="None"/&amp;gt;
      &amp;lt;/Boot&amp;gt;
      &amp;lt;Display VRAMSize="27" monitorCount="1" accelerate3D="false" accelerate2DVideo="false"/&amp;gt;
      &amp;lt;VideoCapture enabled="false" screens="18446744073709551615" horzRes="1024" vertRes="768" rate="512" fps="25"/&amp;gt;
      &amp;lt;RemoteDisplay enabled="false" authType="Null" authTimeout="5000"/&amp;gt;
      &amp;lt;BIOS&amp;gt;
        &amp;lt;ACPI enabled="true"/&amp;gt;
        &amp;lt;IOAPIC enabled="true"/&amp;gt;
        &amp;lt;Logo fadeIn="true" fadeOut="true" displayTime="0"/&amp;gt;
        &amp;lt;BootMenu mode="MessageAndMenu"/&amp;gt;
        &amp;lt;TimeOffset value="0"/&amp;gt;
        &amp;lt;PXEDebug enabled="false"/&amp;gt;
      &amp;lt;/BIOS&amp;gt;
      &amp;lt;USB&amp;gt;
        &amp;lt;Controllers&amp;gt;
          &amp;lt;Controller name="OHCI" type="OHCI"/&amp;gt;
        &amp;lt;/Controllers&amp;gt;
        &amp;lt;DeviceFilters/&amp;gt;
      &amp;lt;/USB&amp;gt;
      &amp;lt;Network&amp;gt;
        &amp;lt;Adapter slot="0" enabled="true" MACAddress="0800277B9303" cable="true" speed="0" promiscuousModePolicy="AllowAll" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
            &amp;lt;InternalNetwork name="intnet"/&amp;gt;
            &amp;lt;NATNetwork name="NatNetwork"/&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
          &amp;lt;HostOnlyInterface name="vboxnet0"/&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="1" enabled="true" MACAddress="0800278F6747" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
            &amp;lt;InternalNetwork name="intnet"/&amp;gt;
            &amp;lt;NATNetwork name="NatNetwork"/&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
          &amp;lt;HostOnlyInterface name="vboxnet0"/&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="2" enabled="true" MACAddress="0800272937DA" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
            &amp;lt;InternalNetwork name="intnet"/&amp;gt;
            &amp;lt;NATNetwork name="NatNetwork"/&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
          &amp;lt;HostOnlyInterface name="vboxnet0"/&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="3" enabled="true" MACAddress="0800270A010D" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
            &amp;lt;InternalNetwork name="intnet"/&amp;gt;
            &amp;lt;NATNetwork name="NatNetwork"/&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
          &amp;lt;HostOnlyInterface name="vboxnet0"/&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="4" enabled="true" MACAddress="0800273CE501" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="5" enabled="true" MACAddress="08002745C214" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="6" enabled="true" MACAddress="080027AE8437" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="7" enabled="true" MACAddress="080027AD4C2C" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="8" enabled="true" MACAddress="080027B1ECB6" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="9" enabled="true" MACAddress="0800272514D6" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="10" enabled="true" MACAddress="0800272FBEFC" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="11" enabled="true" MACAddress="080027461D31" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="12" enabled="true" MACAddress="08002713AA63" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="13" enabled="true" MACAddress="080027926EC8" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="14" enabled="true" MACAddress="08002730A135" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="15" enabled="true" MACAddress="080027C7A2E5" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="16" enabled="true" MACAddress="080027DEB56D" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="17" enabled="true" MACAddress="080027C72A21" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="18" enabled="true" MACAddress="080027C91346" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="19" enabled="true" MACAddress="080027EA4F42" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="20" enabled="true" MACAddress="08002704BF93" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="21" enabled="true" MACAddress="080027A40974" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="22" enabled="true" MACAddress="08002753975C" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="23" enabled="true" MACAddress="080027ECD7D1" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="24" enabled="true" MACAddress="080027F9E90D" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="25" enabled="true" MACAddress="080027800C0B" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="26" enabled="true" MACAddress="080027F2677A" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="27" enabled="true" MACAddress="080027804C07" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="28" enabled="true" MACAddress="080027FA622A" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="29" enabled="true" MACAddress="0800272BBA95" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="30" enabled="true" MACAddress="080027B65D42" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="31" enabled="true" MACAddress="08002748148E" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="32" enabled="true" MACAddress="080027D7F82D" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="33" enabled="true" MACAddress="08002744A19B" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="34" enabled="true" MACAddress="080027FFCAD2" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
        &amp;lt;Adapter slot="35" enabled="true" MACAddress="08002711EAF7" cable="true" speed="0" type="82540EM"&amp;gt;
          &amp;lt;DisabledModes&amp;gt;
            &amp;lt;NAT&amp;gt;
              &amp;lt;DNS pass-domain="true" use-proxy="false" use-host-resolver="false"/&amp;gt;
              &amp;lt;Alias logging="false" proxy-only="false" use-same-ports="false"/&amp;gt;
            &amp;lt;/NAT&amp;gt;
          &amp;lt;/DisabledModes&amp;gt;
        &amp;lt;/Adapter&amp;gt;
      &amp;lt;/Network&amp;gt;
      &amp;lt;UART&amp;gt;
        &amp;lt;Port slot="0" enabled="false" IOBase="0x3f8" IRQ="4" hostMode="Disconnected"/&amp;gt;
        &amp;lt;Port slot="1" enabled="false" IOBase="0x2f8" IRQ="3" hostMode="Disconnected"/&amp;gt;
      &amp;lt;/UART&amp;gt;
      &amp;lt;LPT&amp;gt;
        &amp;lt;Port slot="0" enabled="false" IOBase="0x378" IRQ="7"/&amp;gt;
        &amp;lt;Port slot="1" enabled="false" IOBase="0x378" IRQ="7"/&amp;gt;
      &amp;lt;/LPT&amp;gt;
      &amp;lt;AudioAdapter controller="HDA" driver="Pulse" enabled="true"/&amp;gt;
      &amp;lt;RTC localOrUTC="local"/&amp;gt;
      &amp;lt;SharedFolders/&amp;gt;
      &amp;lt;Clipboard mode="Disabled"/&amp;gt;
      &amp;lt;DragAndDrop mode="Disabled"/&amp;gt;
      &amp;lt;IO&amp;gt;
        &amp;lt;IoCache enabled="true" size="5"/&amp;gt;
        &amp;lt;BandwidthGroups/&amp;gt;
      &amp;lt;/IO&amp;gt;
      &amp;lt;HostPci&amp;gt;
        &amp;lt;Devices/&amp;gt;
      &amp;lt;/HostPci&amp;gt;
      &amp;lt;EmulatedUSB&amp;gt;
        &amp;lt;CardReader enabled="false"/&amp;gt;
      &amp;lt;/EmulatedUSB&amp;gt;
      &amp;lt;Guest memoryBalloonSize="0"/&amp;gt;
      &amp;lt;GuestProperties&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxControl.exe" value="5.0.20r106931" timestamp="1466252388372790000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxCredProv.dll" value="-" timestamp="1466252388391702000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxDisp.dll" value="5.0.20r106931" timestamp="1466252388376477000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxGINA.dll" value="-" timestamp="1466252388391487000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxGuest.sys" value="5.0.20r106931" timestamp="1466252388435555000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxHook.dll" value="5.0.20r106931" timestamp="1466252388376005000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxMRXNP.dll" value="5.0.20r106931" timestamp="1466252388382593000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxMouse.sys" value="5.0.20r106931" timestamp="1466252388436002000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGL.dll" value="5.0.20r106931" timestamp="1466252388433836000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGLarrayspu.dll" value="5.0.20r106931" timestamp="1466252388394307000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGLcrutil.dll" value="5.0.20r106931" timestamp="1466252388397255000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGLerrorspu.dll" value="5.0.20r106931" timestamp="1466252388399115000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGLfeedbackspu.dll" value="5.0.20r106931" timestamp="1466252388416093000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGLpackspu.dll" value="5.0.20r106931" timestamp="1466252388411664000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxOGLpassthroughspu.dll" value="5.0.20r106931" timestamp="1466252388413562000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxSF.sys" value="5.0.20r106931" timestamp="1466252388436401000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxService.exe" value="5.0.20r106931" timestamp="1466252388379749000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxTray.exe" value="5.0.20r106931" timestamp="1466252388379335000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Components/VBoxVideo.sys" value="5.0.20r106931" timestamp="1466252388436923000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/HostVerLastChecked" value="4.3.36" timestamp="1466252184409813000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/InstallDir" value="C:/Program Files/Oracle/VirtualBox Guest Additions" timestamp="1466252388370068000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Revision" value="106931" timestamp="1466252388369917000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/Version" value="5.0.20" timestamp="1466252388369624000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestAdd/VersionExt" value="5.0.20" timestamp="1466252388369717000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestInfo/OS/Product" value="Windows 7" timestamp="1466252388368633000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/GuestInfo/OS/Release" value="6.1.7600" timestamp="1466252388368805000" flags=""/&amp;gt;
        &amp;lt;GuestProperty name="/VirtualBox/HostInfo/GUI/LanguageID" value="en_US" timestamp="1466252365654611000" flags=""/&amp;gt;
      &amp;lt;/GuestProperties&amp;gt;
    &amp;lt;/Hardware&amp;gt;
    &amp;lt;StorageControllers&amp;gt;
      &amp;lt;StorageController name="IDE" type="PIIX4" PortCount="2" useHostIOCache="true" Bootable="true"&amp;gt;
        &amp;lt;AttachedDevice passthrough="false" type="DVD" port="1" device="0"/&amp;gt;
      &amp;lt;/StorageController&amp;gt;
      &amp;lt;StorageController name="SATA" type="AHCI" PortCount="1" useHostIOCache="false" Bootable="true" IDE0MasterEmulationPort="0" IDE0SlaveEmulationPort="1" IDE1MasterEmulationPort="2" IDE1SlaveEmulationPort="3"&amp;gt;
        &amp;lt;AttachedDevice type="HardDisk" port="0" device="0"&amp;gt;
          &amp;lt;Image uuid="{f03c812c-5a12-496b-bd9a-d235f809d184}"/&amp;gt;
        &amp;lt;/AttachedDevice&amp;gt;
      &amp;lt;/StorageController&amp;gt;
    &amp;lt;/StorageControllers&amp;gt;
  &amp;lt;/Machine&amp;gt;
&amp;lt;/VirtualBox&amp;gt;
&lt;/pre&gt;</summary><category term="cadlab"></category><category term="Virtualbox"></category><category term="虛擬機器"></category></entry><entry><title>電腦輔助機械設計流程中的分散式版本管理</title><link href="http://cadlab.mde.tw/post/dian-nao-fu-zhu-ji-jie-she-ji-liu-cheng-zhong-de-fen-san-shi-ban-ben-guan-li.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>kmol</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/dian-nao-fu-zhu-ji-jie-she-ji-liu-cheng-zhong-de-fen-san-shi-ban-ben-guan-li.html</id><summary type="html">&lt;p&gt;&lt;a href="http://bazaar.canonical.com/en/"&gt;Bazaar&lt;/a&gt; (2004 年從 &lt;a href="https://www.gnu.org/software/gnu-arch/"&gt;Gnu arch&lt;/a&gt; 分出), &lt;a href="http://www.bitkeeper.com/"&gt;BitKeeper&lt;/a&gt;, &lt;a href="http://darcs.net/"&gt;darcs&lt;/a&gt;, &lt;a href="https://github.com/git"&gt;Git&lt;/a&gt;, &lt;a href="https://www.mercurial-scm.org/"&gt;Mercurial&lt;/a&gt; 是目前較為常見的分散式版本管理 (Distributed Version Control Systems, DVCS) 技術, 其中自 1998 年前後推出, 唯一商用閉源的 Bitkeeper, 也終於在 2016.05.09, 宣佈轉為開放原始碼套件: &lt;a href="https://users.bitkeeper.org/t/bk-7-2ce-released-2016-05-09/93"&gt;https://users.bitkeeper.org/t/bk-7-2ce-released-2016-05-09/93&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;其實, 早在 1995 年左右的 &lt;a href="https://en.wikipedia.org/wiki/Sun_WorkShop_TeamWare"&gt;Sun WorkShop TeamWare&lt;/a&gt; 就已經擁有分散式版本的相關技術, 而且在許多與機械設計相關的 PDM/PLM 系統中, 也都提供各種分散式版本控管的功能, 只是大多與封閉的檔案系統格式搭配使用, 使得多人協同模式下的電腦輔助機械設計流程, 成本不斷推升, 而且造成導入新技術的步調緩慢.&lt;/p&gt;
&lt;p&gt;當然, 這些國際大公司面對快速發展的數位虛擬與雲端技術, 眼看無法透過賣斷的使用授權來限制使用者, 也紛紛隨著許多創新的先行者 (例如: Onshape), 喊出不再販售大而無當的單機賣斷版本套件, 而改採較具彈性的網路訂閱授權.&lt;/p&gt;
&lt;p&gt;接下來, 當快速進展的全球協同模式必得讓各方團隊開始自行打造各式本地端、區域網路端、廣域網路端與雲端上的網際服務系統時, 目前最佳的授權認証模式, 則多採取 &lt;a href="https://tools.ietf.org/html/rfc6749"&gt;oauth2&lt;/a&gt; 的協定進行, 例如: Onshape 已經釋出 node.js 相容的程式模組: &lt;a href="https://github.com/onshape/passport-onshape"&gt;https://github.com/onshape/passport-onshape&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;儘管如此, 身為一般的機械設計產品開發團隊, 仍然無法像全球大量持續甩開 Microsoft 約束的程式開發者一樣, 熱烈擁抱諸如 Linux 與 FreeBSD 相關分支, 因為 &lt;a href="http://www.freecadweb.org/"&gt;http://www.freecadweb.org/&lt;/a&gt; 尚未大到可以取代許多封閉套件的地步, 現階段只能期待 Onshape 的授權方案能夠持續友善, 未來能夠有機會藉著清楚展示設計流程的分散式版本管理, 讓使用者能夠從此自混水中解脫.&lt;/p&gt;
&lt;p&gt;儘管 Onshape 的 API 使用授權尚未全面釋出, 但是假如希望先利用 oauth2 自行打造一個網際產品設計開發系統, 可以參考下列的簡單程式開發描述:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;讓使用者以 Gmail 帳號, 經由 google 制式流程登入後轉回應用程式&lt;/p&gt;
&lt;p&gt;使用技術: oauth2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;網際程式可以在本地端、區域網路端與雲端平台上佈署, 得到相同執行結果&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用技術: 利用物件案例的啟始, 建立所需的環境目錄架構,  以及起始資料庫檔案等, 利用操作系統模組讀取特定變數判定執行環境&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;資料庫存取技術與分頁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;人性化的 Javascript 或 Brython 環境導入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;美化的 Template 與 css 導入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github, bitbucket 與 &lt;a href="https://gogs.io/"&gt;gogs&lt;/a&gt; 的程式開發版本管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;規劃所要維護的資料表: &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;人員名單含角色管理&lt;/p&gt;
&lt;p&gt;事件管理&lt;/p&gt;
&lt;p&gt;網際運算 (結合 Jupyter)&lt;/p&gt;
&lt;p&gt;參考資料:&lt;/p&gt;
&lt;p&gt;flask&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-now-with-python-3-support"&gt;http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-now-with-python-3-support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;oauth2&lt;/p&gt;
&lt;p&gt;&lt;a href="http://oauth.net/2/"&gt;http://oauth.net/2/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.yorkxin.org/posts/2013/09/30/oauth2-1-introduction/"&gt;https://blog.yorkxin.org/posts/2013/09/30/oauth2-1-introduction/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.ietf.org/html/rfc6749"&gt;https://tools.ietf.org/html/rfc6749&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;git&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/git"&gt;https://github.com/git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;working flow&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.drupal.org/node/803746"&gt;https://www.drupal.org/node/803746&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jupyter and oauth2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jupyterhub/oauthenticator"&gt;https://github.com/jupyterhub/oauthenticator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ryanlovett/jh-google-oauthenticator"&gt;https://github.com/ryanlovett/jh-google-oauthenticator&lt;/a&gt;&lt;/p&gt;</summary><category term="MCAD"></category><category term="DVCS"></category></entry><entry><title>跨操作系統的 Virtualbox vdi 檔案</title><link href="http://cadlab.mde.tw/post/kua-cao-zuo-xi-tong-de-virtualbox-vdi-dang-an.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>Cad Lab</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/kua-cao-zuo-xi-tong-de-virtualbox-vdi-dang-an.html</id><summary type="html">&lt;p&gt;在這個展示中, 我們利用 Windows 7 操作系統中的 Virtualbox 5.0 建立了一個 Windows 7 pro 操作系統的虛擬機器 vdi 檔案後, 將這個 64 位元的 Windows 7 pro 檔案轉到 Ubuntu Virtualbox 中, 用來建立 新的 Windows 7 虛擬機器, 其中分別啟用三種虛擬網路卡的設定, 也就是分別將虛擬網卡設定為 NAT, Host-only 與 Bridged 網路, 主要目的在說明這三種虛擬網路的使用時機與設定細節.&lt;/p&gt;


&lt;h3&gt;NAT 網路設定&lt;/h3&gt;
&lt;p&gt;通常使用者在虛擬機器中建立虛擬 NAT 網路卡, 在於讓虛擬機器利用網路轉址上網, 其中的設定只需要在 Virtualbox 的 File-Preference-Network 中加入對應的 NAT 設定, 決定該網路卡的名稱, 網路 CIDR, 是否啟用 DHCP, 以及是否支援 IPV6 協定與 Port Forwarding 等, 至於在個人虛擬機器中, 與此 NAT 網路對應的虛擬網路卡只要設定為透過 DHCP 取得 CIDR 所選用的網段網路 IP 位址, 就能以 NAT 方式上網.&lt;/p&gt;
&lt;p&gt;當然, 從 File-Preference-Network 中的 NAT Networks 頁面中, 可以發現使用者可以建立多個 global configuration 對應的 NAT 網路, 並給予不同的名稱, 好讓隨後的虛擬機器中選用 NAT 啟動的虛擬網路卡時, 可以配合納入不同的網段, 模擬各種需求的網路架構.&lt;/p&gt;
&lt;p&gt;以下這一張圖就是在 Ubuntu 操作系統中, File-Preference-Network 設定選項, 也就是所謂的 global configuration 設定, 這裡的設定適用於所有這個操作系統下 Virtualbox 所屬的虛擬機器.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_nat_1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;當使用者進 File-Preference-Network 中的網路設定, 選擇新增 NAT 網路時, 呈現的畫面如下, NatNetwork 就是這個 NAT 網路的內定名稱, 假如使用者新增第二個 NAT 網路, 內定名稱就是 NatNetwork1, 當使用者建立虛擬機器, 並在虛擬機器中選擇建立 NAT 虛擬網路卡時, 就可以配合需要, 將該網路卡納入 NatNetwork 或 NatNetwork1 網段, 以取得不同網段的位址與設定.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_nat_2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接下來這個畫面就是有關 File-Preference-Network global configuration 中有關網路設定的第二個頁面, 也就是 Host-only 網路的設定頁面, 這是用來新增 "僅限主機" 網路中的喜好設定, 當使用者增加一組 Host-only 網路設定時, 就可以選擇該網路的網段與是否啟用虛擬的 DHCP 服務, 這項功能隨後再來說明.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_nat_3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;而下面這張圖, 就是針對個別虛擬機器的網路卡設定, 這裡啟用的第1張網路卡, 選擇使用 NAT 設定, 從畫面上顯示, 選用的是最簡單的 NAT (而不是可以選擇網段的 NAT NetWork, 如前所述, 若選擇 NAT NetWork, 可以再對應到 NatNetwork 或 NatNetwork1 NAT 網路名稱), 這裡選擇 NAT, 目的純脆是讓虛擬機器上網.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_nat_4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接下來, 有關虛擬的 NAT 網路卡, 在對應的 Windows 7 操作系統中開機之後的網路設定畫面, 只要確定與 NAT 網路對應的虛擬網卡, 選擇所使用的 IPV4 或 IPV6 協定, 並讓該網卡以 DHCP client, 自動取得 IP 與網路設定即可.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_nat_6.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;這裡要特別提醒的是, 假如某一個虛擬機器啟用多片網路卡之後, 不同屬性的虛擬網卡只能透過 MAC 位址加以對應, 假如是在 Windows 虛擬操作系統, 可以利用命令列, 以 ipconfig /all 取得所有與網路相關的設定, 假如是在 Ubuntu 虛擬操作系統, 則採用 ifconfig.&lt;/p&gt;
&lt;h3&gt;Host-only 網路設定與 tinyproxy&lt;/h3&gt;
&lt;p&gt;接著, 我們來看看與 Host-only 相關的網路設定, 先前的網誌已經談過, Host-only 建置的主要目的, 通常在讓虛擬機器與 Host 間透過虛擬交換器, 讓 Host 的實體網路卡與虛擬機器的虛擬網路卡, 連接在同一個網段上, 而這個網段所使用的設定分為 global configuration 與個別虛擬機器的設定.&lt;/p&gt;
&lt;p&gt;global configuration 可在 File-Preference-Network 的 Host-only Network 頁面中新增一個對應虛擬網卡, 而每一個虛擬 Host-only 網卡 global 設定, 可以決定所要使用的區域網路段, 這裡選擇不啟用 DHCP, 而是自行在虛擬機器的 Host-only 虛擬網卡設定固定 IPV4 與 IPV6 網址. &lt;/p&gt;
&lt;p&gt;下圖就是設定 File-Preference-Network 的地方:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;使用者可以進入 Host-only 頁面, 新增一個 Host-only 的全域用虛擬網路設定.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;從下圖可以看到, 新增了一個 Host-only 的 vboxnet0 網路, 以及 Adapter 與 DHCP Server 的相關設定. 必須特別注意的是, 這裡的設定會影響 Host 操作系統中 (再提醒一下, 是 Host 中的虛擬網卡 ,而不是虛擬機器中的虛擬網路卡) 所產生的 Host-only 虛擬網路卡中的設定 (使用者無需手動設定, 當然也不可以自行手動修改設定, 因為必須與 Virtualbox 中的虛擬交換器與虛擬 DHCP 伺服器彼此對應) , 並且決定虛擬機器中加入此 Host-only 網路設定 (也就是 vboxnet0, 或其他 Host-only 網路設定, 分別以不同名稱對應) 中虛擬網卡所相依的設定.&lt;/p&gt;
&lt;p&gt;例如, 下圖中的 Host-only Network Details 畫面中使用的 IPV4 位址為 192.168.56.1, 就表示 Host 中與此一 Host-only 對應的的虛擬網卡, 會採用這個網路位址設定.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;至於 DHCP Server 的設定, 如下圖所示, 假如啟用 DHCP, 且令其產生一個虛擬的 DHCP 伺服器, 可以設定該伺服器的網址與所能分配的網路位 IP 位址範圍:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_host_only_4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;但是一般在機械設計分析與模擬的情境下, 選用 Host-only 虛擬網路, 通常是要在虛擬機器與 Host 之後配置固定 IP 的各種伺服器, 因此就必須如下圖, 不啟用 DHCP, 而是在各虛擬機器中選擇所附屬的 Host-only 網路設定 (如附屬到前述的 vboxnet0, 或其他 Host-only 網路設定) 後, 配合該網路段, 設定固定 IP 位址.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_5.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;處理好了 Host-only global configuration 設定後, 接下來就是配合在虛擬機器中, 啟用 Host-only 的網路卡, 如下圖所示, 我們將該虛擬網路卡附屬到 vboxnet0 設定, 並且選擇網路卡的型號, 並且設定 MAC 位址.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_6.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;完成設定後, 可以從下圖見到 test 虛擬機器中的虛擬網路卡已經透過 Host-only 配置到 vboxnet0 的設定中:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_7.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接下來, 將 test 虛擬機器開機, 下圖就是配合 vboxnet0 中所選擇的 192.168.56.1 作為虛擬網路的通道 (gateway), 完成設定, 但是從下圖可以看到, 該虛擬機器僅與 Host 操作系統中的虛擬網卡, 以虛擬交換器相連,  因為屬於內部網路段, 並沒有任何虛擬 NAT 或橋接, 讓此一 192.168.56.0/24 的網路連上廣域網路, 因此若這時啟動 Chrome, 在不使用 Host 機器中的代理主機情況下, 將無法上網.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_8.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;有關 Host 操作系統中的代理主機 (proxy server), 先前我們在 Windows host 中介紹利用 &lt;a href="http://www.youngzsoft.net/ccproxy/"&gt;ccproxy&lt;/a&gt; 當作代理主機, 這裡在 Ubuntu 中則利用 sudo apt-get install tinyproxy 安裝 &lt;a href="https://tinyproxy.github.io/"&gt;tinyproxy&lt;/a&gt;, 並設定允許 VM 連結. 當然也可以在 Host 機器中安裝功能更強的 Squid 作為代理主機.&lt;/p&gt;
&lt;p&gt;如下圖所示, 在 Host-only 模式下, 虛擬機器設定了 Host 機器中的代理主機, 就可以順利上網了, 而且虛擬機器中的 git 操作, 也必須透過 git config --global http.proxy http://192.168.56.1:8888 與 git config --global https.proxy http://192.168.56.1:8888 才能連上廣域網路.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_hostonly_9.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;接著, 在 Host-only 的網路設定中, 為了讓虛擬機器中的 Filezilla 可以經由 tinyproxy 代理主機以 SFTP 連線, 則該 proxy 必須允許 port 22 進行 connect 資料傳送, 以下為 tinyproxy 的參考用設定檔:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
##
## tinyproxy.conf -- tinyproxy daemon configuration file
##
## This example tinyproxy.conf file contains example settings
## with explanations in comments. For decriptions of all
## parameters, see the tinproxy.conf(5) manual page.
##

#
# User/Group: This allows you to set the user and group that will be
# used for tinyproxy after the initial binding to the port has been done
# as the root user. Either the user or group name or the UID or GID
# number may be used.
#
User nobody
Group nogroup

#
# Port: Specify the port which tinyproxy will listen on.  Please note
# that should you choose to run on a port lower than 1024 you will need
# to start tinyproxy using root.
# tinyproxy 代理主機所使用的埠號

Port 8888

#
# Listen: If you have multiple interfaces this allows you to bind to
# only one. If this is commented out, tinyproxy will bind to all
# interfaces present.
#
#Listen 192.168.0.1

#
# Bind: This allows you to specify which interface will be used for
# outgoing connections.  This is useful for multi-home'd machines where
# you want all traffic to appear outgoing from one particular interface.
#
#Bind 192.168.0.1

#
# BindSame: If enabled, tinyproxy will bind the outgoing connection to the
# ip address of the incoming connection.
#
#BindSame yes

#
# Timeout: The maximum number of seconds of inactivity a connection is
# allowed to have before it is closed by tinyproxy.
#
Timeout 600

#
# ErrorFile: Defines the HTML file to send when a given HTTP error
# occurs.  You will probably need to customize the location to your
# particular install.  The usual locations to check are:
#   /usr/local/share/tinyproxy
#   /usr/share/tinyproxy
#   /etc/tinyproxy
#
#ErrorFile 404 "/usr/share/tinyproxy/404.html"
#ErrorFile 400 "/usr/share/tinyproxy/400.html"
#ErrorFile 503 "/usr/share/tinyproxy/503.html"
#ErrorFile 403 "/usr/share/tinyproxy/403.html"
#ErrorFile 408 "/usr/share/tinyproxy/408.html"

#
# DefaultErrorFile: The HTML file that gets sent if there is no
# HTML file defined with an ErrorFile keyword for the HTTP error
# that has occured.
#
DefaultErrorFile "/usr/share/tinyproxy/default.html"

#
# StatHost: This configures the host name or IP address that is treated
# as the stat host: Whenever a request for this host is received,
# Tinyproxy will return an internal statistics page instead of
# forwarding the request to that host.  The default value of StatHost is
# tinyproxy.stats.
#
#StatHost "tinyproxy.stats"
#

#
# StatFile: The HTML file that gets sent when a request is made
# for the stathost.  If this file doesn't exist a basic page is
# hardcoded in tinyproxy.
#
StatFile "/usr/share/tinyproxy/stats.html"

#
# Logfile: Allows you to specify the location where information should
# be logged to.  If you would prefer to log to syslog, then disable this
# and enable the Syslog directive.  These directives are mutually
# exclusive.
#
Logfile "/var/log/tinyproxy/tinyproxy.log"

#
# Syslog: Tell tinyproxy to use syslog instead of a logfile.  This
# option must not be enabled if the Logfile directive is being used.
# These two directives are mutually exclusive.
#
#Syslog On

#
# LogLevel: 
#
# Set the logging level. Allowed settings are:
#   Critical    (least verbose)
#   Error
#   Warning
#   Notice
#   Connect     (to log connections without Info's noise)
#   Info        (most verbose)
#
# The LogLevel logs from the set level and above. For example, if the
# LogLevel was set to Warning, then all log messages from Warning to
# Critical would be output, but Notice and below would be suppressed.
#
LogLevel Info

#
# PidFile: Write the PID of the main tinyproxy thread to this file so it
# can be used for signalling purposes.
#
PidFile "/var/run/tinyproxy/tinyproxy.pid"

#
# XTinyproxy: Tell Tinyproxy to include the X-Tinyproxy header, which
# contains the client's IP address.
#
#XTinyproxy Yes

#
# Upstream:
#
# Turns on upstream proxy support.
#
# The upstream rules allow you to selectively route upstream connections
# based on the host/domain of the site being accessed.
#
# For example:
#  # connection to test domain goes through testproxy
#  upstream testproxy:8008 ".test.domain.invalid"
#  upstream testproxy:8008 ".our_testbed.example.com"
#  upstream testproxy:8008 "192.168.128.0/255.255.254.0"
#
#  # no upstream proxy for internal websites and unqualified hosts
#  no upstream ".internal.example.com"
#  no upstream "www.example.com"
#  no upstream "10.0.0.0/8"
#  no upstream "192.168.0.0/255.255.254.0"
#  no upstream "."
#
#  # connection to these boxes go through their DMZ firewalls
#  upstream cust1_firewall:8008 "testbed_for_cust1"
#  upstream cust2_firewall:8008 "testbed_for_cust2"
#
#  # default upstream is internet firewall
#  upstream firewall.internal.example.com:80
#
# The LAST matching rule wins the route decision.  As you can see, you
# can use a host, or a domain:
#  name     matches host exactly
#  .name    matches any host in domain "name"
#  .        matches any host with no domain (in 'empty' domain)
#  IP/bits  matches network/mask
#  IP/mask  matches network/mask
#
#Upstream some.remote.proxy:port

#
# MaxClients: This is the absolute highest number of threads which will
# be created. In other words, only MaxClients number of clients can be
# connected at the same time.
#
MaxClients 100

#
# MinSpareServers/MaxSpareServers: These settings set the upper and
# lower limit for the number of spare servers which should be available.
#
# If the number of spare servers falls below MinSpareServers then new
# server processes will be spawned.  If the number of servers exceeds
# MaxSpareServers then the extras will be killed off.
#
MinSpareServers 5
MaxSpareServers 20

#
# StartServers: The number of servers to start initially.
#
StartServers 10

#
# MaxRequestsPerChild: The number of connections a thread will handle
# before it is killed. In practise this should be set to 0, which
# disables thread reaping. If you do notice problems with memory
# leakage, then set this to something like 10000.
#
MaxRequestsPerChild 0

#
# Allow: Customization of authorization controls. If there are any
# access control keywords then the default action is to DENY. Otherwise,
# the default action is ALLOW.
#
# The order of the controls are important. All incoming connections are
# tested against the controls based on order.
#
Allow 127.0.0.1
# 設定允許使用 tinyproxy 代理主機的網路段
Allow 192.168.56.0/24
#Allow 192.168.0.0/16
#Allow 172.16.0.0/12
#Allow 10.0.0.0/8

#
# AddHeader: Adds the specified headers to outgoing HTTP requests that
# Tinyproxy makes. Note that this option will not work for HTTPS
# traffic, as Tinyproxy has no control over what headers are exchanged.
#
#AddHeader "X-My-Header" "Powered by Tinyproxy"

#
# ViaProxyName: The "Via" header is required by the HTTP RFC, but using
# the real host name is a security concern.  If the following directive
# is enabled, the string supplied will be used as the host name in the
# Via header; otherwise, the server's host name will be used.
#
ViaProxyName "tinyproxy"

#
# DisableViaHeader: When this is set to yes, Tinyproxy does NOT add
# the Via header to the requests. This virtually puts Tinyproxy into
# stealth mode. Note that RFC 2616 requires proxies to set the Via
# header, so by enabling this option, you break compliance.
# Don't disable the Via header unless you know what you are doing...
#
#DisableViaHeader Yes

#
# Filter: This allows you to specify the location of the filter file.
#
#Filter "/etc/filter"

#
# FilterURLs: Filter based on URLs rather than domains.
#
#FilterURLs On

#
# FilterExtended: Use POSIX Extended regular expressions rather than
# basic.
#
#FilterExtended On

#
# FilterCaseSensitive: Use case sensitive regular expressions.
#
#FilterCaseSensitive On

#
# FilterDefaultDeny: Change the default policy of the filtering system.
# If this directive is commented out, or is set to "No" then the default
# policy is to allow everything which is not specifically denied by the
# filter file.
#
# However, by setting this directive to "Yes" the default policy becomes
# to deny everything which is _not_ specifically allowed by the filter
# file.
#
#FilterDefaultDeny Yes

#
# Anonymous: If an Anonymous keyword is present, then anonymous proxying
# is enabled.  The headers listed are allowed through, while all others
# are denied. If no Anonymous keyword is present, then all headers are
# allowed through.  You must include quotes around the headers.
#
# Most sites require cookies to be enabled for them to work correctly, so
# you will need to allow Cookies through if you access those sites.
#
#Anonymous "Host"
#Anonymous "Authorization"
#Anonymous "Cookie"

#
# ConnectPort: This is a list of ports allowed by tinyproxy when the
# CONNECT method is used.  To disable the CONNECT method altogether, set
# the value to 0.  If no ConnectPort line is found, all ports are
# allowed (which is not very secure.)
#
# The following two ports are used by SSL.
#
# for HTTPS
ConnectPort 443
ConnectPort 563
# 為了讓虛擬機器中的 filezilla 可以透過 SFTP 協定傳輸, 必須允許使用 port 22
ConnectPort 22
#
# Configure one or more ReversePath directives to enable reverse proxy
# support. With reverse proxying it's possible to make a number of
# sites appear as if they were part of a single site.
#
# If you uncomment the following two directives and run tinyproxy
# on your own computer at port 8888, you can access Google using
# http://localhost:8888/google/ and Wired News using
# http://localhost:8888/wired/news/. Neither will actually work
# until you uncomment ReverseMagic as they use absolute linking.
#
#ReversePath "/google/" "http://www.google.com/"
#ReversePath "/wired/"  "http://www.wired.com/"

#
# When using tinyproxy as a reverse proxy, it is STRONGLY recommended
# that the normal proxy is turned off by uncommenting the next directive.
#
#ReverseOnly Yes

#
# Use a cookie to track reverse proxy mappings. If you need to reverse
# proxy sites which have absolute links you must uncomment this.
#
#ReverseMagic Yes

#
# The URL that's used to access this reverse proxy. The URL is used to
# rewrite HTTP redirects so that they won't escape the proxy. If you
# have a chain of reverse proxies, you'll need to put the outermost
# URL here (the address which the end user types into his/her browser).
#
# If not set then no rewriting occurs.
#
#ReverseBaseURL "http://localhost:8888/"
&lt;/pre&gt;

&lt;h3&gt;Bridged 網路設定&lt;/h3&gt;
&lt;p&gt;接下來, 則是 Bridged network 的應用, 先前已經提過, 虛擬機器採用 Bridged 設定的目的在於讓虛擬機器可以藉由 host 電腦的實體網路卡, 充當一台虛擬的伺服器.&lt;/p&gt;
&lt;p&gt;當使用者在建立虛擬機器的過程, 啟用 Bridged 網路卡時, 就必須選擇 host 電腦上, 所要附加的一片實體網路卡, 經過實作, 即便在只有一片實體網路卡的電腦, 也可以將此唯一的實體網卡附加給虛擬機器中的 Bridged 虛擬網路卡, &lt;/p&gt;
&lt;p&gt;以下的網路情境是 Host 為 Ubuntu 操作系統採用光世代路由器, 以 IPV4 tunnel 啟用 IPV6 網路協定, 因此一旦 Windows 7 中的虛擬機器選擇將虛擬網卡, 以 bridged network 的設定, 附加到 Ubuntu 操作系統中唯一的網路卡時, 就 Ubuntu 操作系統所對應的連外網路來說, Windows 7 的這一片虛擬網卡, 就成為一張可以獨立設定與運作的網路卡 (儘管是虛擬產生, 且透過虛擬交換器與實體網卡相連), 由於此時 Host 機器中的實體網路卡是直接連光世代的 NAT/DHCP 上網, 因此若將虛擬機器 Windows 7 中的這片 bridged 虛擬網卡設為採 DHCP client 連網, 則這片網卡也能透過虛擬的交換器與 Ubuntu 的實體網卡同位階, 以 DHCP 取得光世代的網路設定而連接到廣域網路, 如下圖所示:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_bridged_1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;讓我們再回頭看看 bridged 網路的設定, 選用 bridged 網路設定後的虛擬機器 Windows 7 網卡採自動取得網路設定:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_bridged_2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;Virtualbox 的 global configuratin 網路設定中, 可以無需建立任何 NAT 或 Host-only 的設定:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_bridged_3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_bridged_4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;只需要在個別的虛擬機器網路設定中, 啟用 Bridged 網路時, 與 Host 中的實體網路卡進行綁定 (這裡 attached 到 Ubuntu 操作系統中的 p10p1 實體網路卡):&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_bridged_5.png" width="800" /&gt;&lt;/p&gt;
&lt;h3&gt;Virtualbox 網路設定結論&lt;/h3&gt;
&lt;p&gt;從上面與 Virtualbox 網路設定有關的三種模式: NAT, Host-only 與 Bridged, 各有不同的特性, NAT 可以簡便地讓虛擬機器上網, Host-only 可以在主機範圍以內的虛擬網域中創造出多台內部伺服器, 而 Bridged 網路則透過 Host 實體網路卡的驅動程式與實體的網路卡接線, 在虛擬機器中模擬出一片如假包換的網路卡, 可以讓外部網路上的主機, 直接連線到虛擬機器中的各種伺服服務.&lt;/p&gt;
&lt;p&gt;就 MDE CADLab 的實際配置而言, 我們在 Windows 7 Host 操作系統中配置 Ubuntu 虛擬機器, 並採用 &lt;a href="http://vboxvmservice.sourceforge.net/"&gt;http://vboxvmservice.sourceforge.net/&lt;/a&gt; 服務自動啟用, 然後在 Ubuntu 虛擬操作系統中配置固定的 IPV4 與 IPV6 網路位址, 安裝配置支援雙網路協定的 Squid 代理主機後, 接著再透過 Bridged 網路設定讓其他純 IPV6 上網的電腦, 就能透過這些 Squid 代理主機連線到 IPV4 與 IPV6 的網路服務器.&lt;/p&gt;
&lt;p&gt;最後, 當我們在安裝配置各種電腦輔助設計、工程分析、電腦輔助製造與自動控制相關套件時, 可以在一台機器中完成多元的安裝配置與測試, 並且希望未來能將這些實際配置的過程納入相關課程教學之中.&lt;/p&gt;</summary><category term="cadlab"></category><category term="Virtualbox"></category><category term="虛擬機器"></category></entry><entry><title>Onshape 提供免費教育單位帳號</title><link href="http://cadlab.mde.tw/post/onshape-ti-gong-mian-fei-jiao-yu-dan-wei-zhang-hao.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>kmol</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/onshape-ti-gong-mian-fei-jiao-yu-dan-wei-zhang-hao.html</id><summary type="html">&lt;p&gt;從 &lt;a href="https://www.onshape.com/cad-blog/introducing-the-onshape-education-plan"&gt;https://www.onshape.com/cad-blog/introducing-the-onshape-education-plan&lt;/a&gt; 得知, Onshpae 除了提供各種身份的用戶有使用限度的免費帳號以外, 從 2016.04.07 開始更加碼, 讓教育單位可以免費, 且沒有使用限度的情況下, 來探索使用這個劃時代的雲端電腦輔助機械設計套件.&lt;/p&gt;


&lt;h2&gt;穩定的網路連線是使用 Onshpae 的必要條件&lt;/h2&gt;
&lt;p&gt;假如電腦教室網路連線穩定, 六十名學生可以同時利用 Firefox 或 Chrome,  登入到 &lt;a href="https://www.onshape.com"&gt;Onshape&lt;/a&gt; 執行協同產品設計, 登記免費的教育單位專用帳號後, 只要完成電子郵箱驗證, 就會自動登入系統.&lt;/p&gt;
&lt;h2&gt;Onshape 的 Document 是專案容器&lt;/h2&gt;
&lt;p&gt;登入後, 可以利用左側的 Tutorials &amp;amp; Samples 來了解 Onshpae 的用法:&lt;/p&gt;
&lt;p&gt;Onshape 中的 Documents 為設計專案層次 (Project level) 的文件庫 (Container), 可以納入 3D 零件, 3D 組件, 工程圖, 以及從外部轉入的各式檔案.&lt;/p&gt;
&lt;h2&gt;Onshape 操作無需存檔, 而且保有流程版本&lt;/h2&gt;
&lt;p&gt;在 Onshpae 環境中操作零件繪圖, 使用者無需手動存檔, 只要完成任何操作, 都會自動儲存版本, 而且可以在各版本之間遊走.&lt;/p&gt;
&lt;p&gt;登入 Onshape, 就可以利用左上角的 Create 按鈕建立 Document 專案文件, 然後再利用左下角的 + 號, 選擇要建立零件, 組件, 工程圖或者是從本地端上傳各式文件.&lt;/p&gt;
&lt;p&gt;假如是建立零件, 與其他 MCAD 套件類似, 可以選擇 Sketch 再選擇作圖平面, 或者先選擇作圖平面, 再選擇 Sketch 繪製平面輪廓, 輪廓繪圖, 可以直接在 3D 環境畫圖, 或者利用滑鼠右鍵帶出 View normal to sketch plane 的功能, 以垂直繪圖面的平面上進行繪圖.&lt;/p&gt;
&lt;h2&gt;Onshape 可以轉出各式檔案&lt;/h2&gt;
&lt;p&gt;各種基本的平面繪圖與尺寸標定或約束條件設定, 都與其他傳統的單機 MCAD 大同小異, 雖然 Onshape 與 Solid Edge 採用相同的 PARASOLID kernel, 但是所有的零組件檔案, 可以直接以點選下方的零組件 Tab, 再以滑鼠右鍵帶出 Export 功能, 然後轉成 PARASOLID 或 ACIS 核心檔,甚至也能直接轉成 Solidworks 格式檔案, 當然也能轉成 IGES, STEP, RHINO, STL 等格式.&lt;/p&gt;
&lt;h2&gt;Onshape 擁有直覺的組立約束&lt;/h2&gt;
&lt;p&gt;當使用者在 Onshape 零件繪製模式下完成基本零件, 就可以利用左下方的 + 建立組立檔, 將各零件一一放入進行組裝.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-fastened.htm"&gt;Fastened mate&lt;/a&gt; 主要用於焊接式的組合, 約束條件置入後, 兩個零件間已經沒有任何自由度而結為一體.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-revolute.htm"&gt;Revolute mate&lt;/a&gt; 主要用於旋轉軸式的組合, 約束條件置入後, 兩個零件間只留下一個旋轉自由度.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-slider.htm"&gt;Slider mate&lt;/a&gt; 主要用於滑塊式的組合, 約束條件置入後, 兩個零件間只留下一個平移自由度.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-planar.htm"&gt;Planar mate&lt;/a&gt; 主要用於面接式組合, 約束條件置入後, 兩個零件面對面靠接, 只允許兩個方向的移動自由度, 以及垂直靠接面方向的一個旋轉自由度.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-cylindrical.htm&gt;Cylindrical mate&lt;/a&gt; 主要用於圓柱螺栓式的組合, 約束條件置入後, 兩個零件將具有旋轉與前進或後退的兩個自由度.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-pin_slot.htm"&gt;Pin slot mate&lt;/a&gt; 主要用於插銷式組合, 約束條件置入後, 兩個零件具有旋轉與側向平移等兩個自由度.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-ball.htm"&gt;Ball mate&lt;/a&gt; 主要用於球接頭式的組合, 約束條件置入後, 將保留3個方向的旋轉自由度.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cad.onshape.com/help/Content/mate-ball.htm"&gt;Tangent mate&lt;/a&gt; 則是比較特殊的相切組立, 約束條件置入後, 兩個零件將始終保持相切的關係.&lt;/p&gt;
&lt;h2&gt;簡單的組立應用&lt;/h2&gt;
&lt;p&gt;根據上述基本功能, 就可以完成下列腳踏車鏈條的基本組立:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/onshape_bike_chain_assembly.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;教育版對應帳號下所完成的 &lt;a href="https://cad.onshape.com/documents/29d1a262b055745e59be7c09/w/1f25948ad73282e2440ffdcf"&gt;Bike chain Document&lt;/a&gt;.&lt;/p&gt;</summary><category term="Onshape"></category><category term="MCAD"></category></entry><entry><title>Virtualbox 的應用與網路設定</title><link href="http://cadlab.mde.tw/post/virtualbox-de-ying-yong-yu-wang-lu-she-ding.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>kmol</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/virtualbox-de-ying-yong-yu-wang-lu-she-ding.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.virtualbox.org/"&gt;Virtualbox&lt;/a&gt; 是一套能在 Windows, Linux, Mac 與 Solaris 操作系統上使用的虛擬器 (Virtualizer).&lt;/p&gt;


&lt;h2&gt;Virtualbox 功能&lt;/h2&gt;
&lt;p&gt;虛擬器的功能有下列幾點:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在任一操作系統開機後, 可以同時啟動多種虛擬的操作系統平台, 並且透過虛擬硬體的配置與設定, 執行各種老舊的操作系統應用程式 , 畢竟老應用程式不死, 只是慢慢凋零!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;以檔案的架構保留各種電腦軟硬體的配置, 可提升軟體開發效能外, 並可在軟體推銷過程避開多次煩雜的設定 (當然 Docker based 的虛擬技術, 已經逐漸超越這種整套操作系統虛擬的應用).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;程式開發者可以在虛擬機器中廣泛透過虛擬的硬體配置, 大膽進行各項操作與測試, 無需擔心損毀電腦週邊實體.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在開機的一台電腦實體中, 可同時模擬多台電腦的運作, 省下操作可能消耗的電力, 降低實體運作與硬體維護成本.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Virtualbox 的參考手冊: &lt;a href="https://www.virtualbox.org/manual/"&gt;https://www.virtualbox.org/manual/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以下將針對 Virtualbox 的網路設定與應用加以說明:&lt;/p&gt;
&lt;p&gt;Virtualbox 的網路設定模式分為 NAT, Bridged, Internal, Host-only, UDP tunnel 與 VDE 等.&lt;/p&gt;
&lt;p&gt;NAT 使用情境為啟動虛擬機器後, 當作一般客戶端電腦使用, 虛擬機的連網是透過 NAT 轉址, 以 Host 電腦的網路 IP 對外抓取資料.&lt;/p&gt;
&lt;p&gt;Bridged 使用情境為啟動虛擬機器後, 當作一般伺服器電腦使用, 在 Host 操作系統中模擬出的虛擬網卡, 可以與 Host 電腦的實體網路卡進行橋接與設定外部 IP 後, 視為網路幹線上的一台伺服器.&lt;/p&gt;
&lt;p&gt;Internal 使用情境主要關注在虛擬機器之間的網路彼此相連, 但卻自外於與 Host 連接的區域或廣域網路, Internal networking 的特性通常用來當作資料庫伺服器, 可以透過 internal 網路, 提供對外連線的全球資訊網伺服器資料, 但是外部電腦無法跨越 internal 網路架構直接連線.&lt;/p&gt;
&lt;p&gt;Host-only 使用情境則將網路服務的範圍界定在 Host 主機範圍內, 在虛擬機器所啟動的各種服務, 可以讓 Host 連線, 但是因為沒有像 Bridged 網路設置, 與 Host 的實體網路卡進行橋接, 因此 Host-only 的網路環境通常讓操作 Host 的程式設計師將 Host-only 的電腦當作跨網路的虛擬伺服器使用.&lt;/p&gt;
&lt;p&gt;UDP tunnel 網路用來串接位於不同 Hosts 的虛擬機器, 而 VDE 則是 Virtual Distributed Ethernet 則是一種虛擬網路基礎架構.&lt;/p&gt;
&lt;p&gt;以機械設計的電腦輔助設計應用而言, Virtualbox 網路中的 NAT 與 Host-only 模式最為常用, 而 NAT 網路的設定非常直覺, 只要在所新增的虛擬機器中的網路設定, 選擇 NAT, 然後開機之後, 就可以直接在虛擬機器中使用轉址的網路服務.&lt;/p&gt;
&lt;h2&gt;Host-only 虛擬網路設定&lt;/h2&gt;
&lt;p&gt;Host-only 的網路設置則稍微複雜, 其中牽涉到 Virtualbox 應用程式的網路偏好設定, 以及虛擬機器本身的網路設定搭配, 才能讓 Host 中的應用程式透過 Host 操作系統中的 Host-only 虛擬網路卡, 與位於同一網段的虛擬機器設置連線.&lt;/p&gt;
&lt;h3&gt;Virtualbox 網路偏好設定&lt;/h3&gt;
&lt;p&gt;Virtualbox 的網路相關設定分為兩個層次, 有關整個 Virtualbox 的設定位於 File-&amp;gt;Preferences-&amp;gt;Network, 而第二個層次為各虛擬機器的個別設定. 若以 File-&amp;gt;Preferences-&amp;gt;Network 中, 有關 Host-only 網路設定的目的, 在讓 Virtualbox 的 Host 本體, 可以透過虛擬的網路卡與 Virtualbox 中的虛擬機器網路卡處於同一個區域網路中.&lt;/p&gt;
&lt;p&gt;換言之, 如 Host-only 這個名稱本身的所謂 Host only, 就是虛擬機器的網路能見度, 僅止於 Host only, 外部電腦無法與這些虛擬機器連線, 甚至若虛擬機器沒有透過 Host 電腦中的代理主機, 虛擬機器中的瀏覽器也無法連線上網.&lt;/p&gt;
&lt;p&gt;至於 File-&amp;gt;Preferences-&amp;gt;Network 中的 Host-only 設定, 總共決定兩件虛擬功能, 其一為位於 Host 中的虛擬網路卡, 要採用的網路協定與網址, 所謂的網路協定就是可以使用 IPV4 或 IPV6 網路協定, 至於虛擬網卡的網址, 就會決定這個所謂的 Host-only 網路, 位於那一個內部網段, 例如, 可以使用 IPV4 協定, 並將虛擬網路卡的網址設為 192.168.56.1, 也就是將 Host-only 的網段設為 192.168.56.0.&lt;/p&gt;
&lt;p&gt;File-&amp;gt;Preferences-&amp;gt;Network 中的 Host-only 第 2 個設定, 就是在這個上述設定的虛擬網段中, 是否要再虛擬出一台 DHCP 伺服器, 例如, 選擇要在這個虛擬 Host-only 網段中啟用虛擬的 DHCP 伺服器, 就可以決定這個虛擬的 DHCP 伺服器的 IP (當然要與第 1 項設定的網段相同, 也就是必須位於 192.168.56.0 網段中), 例如, 將虛擬的 DHCP server IP 設為 192.168.56.100, 並且將 DHCP IP 範圍設為 192.168.56.101-200.&lt;/p&gt;
&lt;p&gt;儘管 Virtualbox 中的 File-&amp;gt;Preferences-&amp;gt;Network 中的 Host-only 第 2 個設定, 可以啟用 DHCP, 但是通常使用 Host-only 虛擬網路模式的目的, 大多要在 Host 中連接虛擬機器中的伺服器, 使用特定的服務內容, 因此一般都停用 Host-only 網路設定中的虛擬 DHCP server 服務, 而採手動設定虛擬機器中的 IP 與 Gateway.&lt;/p&gt;
&lt;h3&gt;虛擬機器的網路設定&lt;/h3&gt;
&lt;p&gt;例如, 可以將其中第一台使用 Host-only 網路模式的虛擬機器網路 IP 設為 192.168.56.101, 並將 Gateway 設為 192.168.56.1 (也就是 Host 中對應虛擬網卡的 IP 位址), 第 2 台則設可為 192.168.56.102, 依此類推採用固定的 IP 位址來界定虛擬機器所提供的不同服務.&lt;/p&gt;
&lt;p&gt;Host-only 虛擬網路相關設定的參考畫面如下:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_host_only_1.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_host_only_2.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_host_only_3.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_host_only_4.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cad-lab.github.io/cadlab_data/files/201606/virtualbox_host_only_5.png" width="800" /&gt;&lt;/p&gt;</summary><category term="CADLab"></category><category term="Virtualbox"></category><category term="虛擬機器"></category></entry><entry><title>Bezier 曲線導引</title><link href="http://cadlab.mde.tw/post/bezier-qu-xian-dao-yin.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>kmol</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/bezier-qu-xian-dao-yin.html</id><summary type="html">&lt;p&gt;A primer on Bezier curves&lt;/p&gt;


&lt;p&gt;&lt;a href="http://pomax.github.io/bezierinfo/"&gt;http://pomax.github.io/bezierinfo/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pomax.github.io/bezierjs/"&gt;http://pomax.github.io/bezierjs/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嘗試將純 Javascript 的環境轉為 Brython based &lt;a href="https://github.com/brython-dev/brython"&gt;https://github.com/brython-dev/brython&lt;/a&gt;, 希望完成之後, 可以讓使用者編寫 Python3 程式碼來操控 Bezier 曲線 &lt;a href="https://en.wikipedia.org/wiki/B%C3%A9zier_curve"&gt;https://en.wikipedia.org/wiki/B%C3%A9zier_curve&lt;/a&gt;.&lt;/p&gt;</summary><category term="Javascript"></category><category term="程式"></category></entry><entry><title>導入 Ubuntu 操作系統</title><link href="http://cadlab.mde.tw/post/dao-ru-ubuntu-cao-zuo-xi-tong.html" rel="alternate"></link><published>2016-10-16T11:03:17+08:00</published><updated>2016-10-16T11:03:17+08:00</updated><author><name>kmol</name></author><id>tag:cadlab.mde.tw,2016-10-16:post/dao-ru-ubuntu-cao-zuo-xi-tong.html</id><summary type="html">&lt;p&gt;身為一位機械設計工程系的學生, 有機會在 Ubuntu 操作系統上工作嗎?&lt;/p&gt;


&lt;p&gt;自從 1995 年, 第1套能在 Windows 操作系統執行的電腦輔助機械設計繪圖軟體套件, SolidWorks, 出現, 並且逐步蔚為風潮之後,  MCAD (Mechanical Computer Aided Design) 中端套件, 幾乎都只能在 Windows 操作系統上運作. 許多機械設計工程系相關師生, 幾乎早已經忘記, 最早的 MCAD 系統可都是在泛 Unix based 的操作系統上運作.&lt;/p&gt;
&lt;p&gt;時間轉到 2015 年, Onshape: &lt;a href="http://www.onshape.com"&gt;http://www.onshape.com&lt;/a&gt; 的出現, 雖然截至目前只提供陽春的 MCAD 功能, 但是至少讓原本必須在 Windows 操作系統上才能上課的約束條件, 頓時消失, 因為計算機程式、網際內容管理、電腦輔助設計實習與協同產品設計實習等課程, 已經能夠百分之百在 Ubuntu 操作系統上運作.&lt;/p&gt;
&lt;p&gt;過去, 我們在 Windows 操作系統上的工作類別, 不外乎:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;文書處理&lt;/li&gt;
&lt;li&gt;程式編寫與執行&lt;/li&gt;
&lt;li&gt;MCAD 零件繪圖, 零件組立&lt;/li&gt;
&lt;li&gt;MCAE 工程分析&lt;/li&gt;
&lt;li&gt;擷取執行畫面&lt;/li&gt;
&lt;li&gt;錄製操作流程影片&lt;/li&gt;
&lt;li&gt;遠端登入到其他電腦 (Remote Desktop)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以下將就這些工作分類, 介紹在 Ubuntu 操作系統中的相對應工具與使用方法.&lt;/p&gt;
&lt;p&gt;首先, 這裡建議的 Ubuntu 操作系統為 Ubuntu Server 版本加上 ubuntu-desktop 套件的安裝.&lt;/p&gt;
&lt;p&gt;一旦安裝完成, 第1項文書處理工作就可以由 LibreOffice 套件加以勝任.&lt;/p&gt;
&lt;h2&gt;程式編寫與執行&lt;/h2&gt;
&lt;p&gt;這裡包含 Python3, PyQt5, Leo Editor, SciTE, Git 等套件都是跨操作系統, 其中 Python3  已經內建在 Ubuntu 14.04 操作系統中, 只是必須透過 python3 執行, 例如: 必須在命令列中, 輸入 python3 帶出互動式解譯環境.&lt;/p&gt;
&lt;p&gt;pip3 模組則需要透過 sudo apt-get install python3-pip 安裝&lt;/p&gt;
&lt;p&gt;PyQt5 則需要透過 sudo apt-get install python3-pyqt5 安裝&lt;/p&gt;
&lt;p&gt;Leo Editor 透過 sudo pip3 install https://github.com/leo-editor/leo-editor/archive/master.zip 安裝, 並且以 leo&amp;amp; 呼叫&lt;/p&gt;
&lt;p&gt;SciTE 透過 sudo apt-get install scite 安裝&lt;/p&gt;
&lt;p&gt;git 透過 sudo apt-get install git 安裝&lt;/p&gt;
&lt;h2&gt;MCAD 零件與組件繪圖&lt;/h2&gt;
&lt;p&gt;這裡採用 &lt;a href="http://www.onshape.com"&gt;http://www.onshape.com&lt;/a&gt;, 只需要 Firefox 或 Chromium 瀏覽器就可以運作&lt;/p&gt;
&lt;p&gt;FreeCAD: &lt;a href="http://www.freecadweb.org/"&gt;http://www.freecadweb.org/&lt;/a&gt; 與 Solvespace: &lt;a href="http://solvespace.com/"&gt;http://solvespace.com/&lt;/a&gt;, 則是能在 Ubuntu 環境運作的 MCAD 套件.&lt;/p&gt;
&lt;h2&gt;MCAE 工程分析&lt;/h2&gt;
&lt;p&gt;這裡採用 &lt;a href="http://www.simscale.com"&gt;http://www.simscale.com&lt;/a&gt;, 只需要 Firefox 或 Chromium 瀏覽器就可以運作&lt;/p&gt;
&lt;p&gt;COMSOL &lt;a href="https://www.comsol.com/system-requirements"&gt;可以&lt;/a&gt;在 Ubuntu 環境中運作&lt;/p&gt;
&lt;p&gt;Ansys 則&lt;a href="http://www.ansys.com/-/media/Ansys/corporate/files/pdf/solutions/it-professionals/platform-support/platformsupportansys162stategyandplans.pdf?la=en"&gt;建議&lt;/a&gt;在 Red Hat 或 SUSE 商用版上運作&lt;/p&gt;
&lt;h2&gt;錄製操作流程影片&lt;/h2&gt;
&lt;p&gt;在 Ubuntu 操作系統中擷取電腦螢幕畫面, 只要按下 PrintScr 按鍵, 就可以直接存為 png 格式檔案&lt;/p&gt;
&lt;p&gt;操作流程則可以使用 Kazam 將過程錄成 mp4檔案&lt;/p&gt;
&lt;p&gt;Kazam: &lt;a href="https://code.launchpad.net/~kazam-team/kazam/stable"&gt;https://code.launchpad.net/~kazam-team/kazam/stable&lt;/a&gt; (以 Python 編寫)&lt;/p&gt;
&lt;p&gt;安裝:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
sudo add-apt-repository ppa:kazam-team/stable-series
sudo apt-get update
sudo apt-get install kazam
&lt;/pre&gt;

&lt;p&gt;使用: kazam&amp;amp;&lt;/p&gt;
&lt;p&gt;至於在 Ubuntu 遠端登入到 Windows, 可以使用 Ubuntu Software Center 安裝 remmina, 並且在連線設定上的 Advanced 頁面中, Security 選用 RDP 協定, 即可正確連線.&lt;/p&gt;
&lt;h2&gt;Ubuntu 檔案架構&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;/bin ­­ binary applications (most of your executable files) &lt;/li&gt;
&lt;li&gt;/boot ­­ files required to boot (such as the kernel, etc) &lt;/li&gt;
&lt;li&gt;/dev ­­ your devices (everything from drives to displays) &lt;/li&gt;
&lt;li&gt;/etc ­­ just about every configuration file for your system &lt;/li&gt;
&lt;li&gt;/etc/rc.d ­­ contains a number of shell scripts that are run on bootup at different run levels. &lt;/li&gt;
&lt;li&gt;/etc/X11 ­­ configuration files for the X Window system &lt;/li&gt;
&lt;li&gt;/home ­­ locally stored user files and folders &lt;/li&gt;
&lt;li&gt;/lib ­­ system libraries (similar to Program Files) &lt;/li&gt;
&lt;li&gt;/media ­­ mounted (or loaded) devices such as cdroms, digital cameras, etc. &lt;/li&gt;
&lt;li&gt;/mnt ­­ mounted file systems &lt;/li&gt;
&lt;li&gt;/opt ­­ location for “optionally” installed programs &lt;/li&gt;
&lt;li&gt;/sbin ­­ system ­only binaries&lt;/li&gt;
&lt;li&gt;/sys ­­ contains information about the system &lt;/li&gt;
&lt;li&gt;/tmp ­­ temporary files &lt;/li&gt;
&lt;li&gt;/usr ­­ applications mainly for regular users &lt;/li&gt;
&lt;li&gt;/var ­­ mainly logs, databases, etc. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ubuntu 常用指令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ls : list directory contents&lt;/li&gt;
&lt;li&gt;cd : Change Directory&lt;/li&gt;
&lt;li&gt;pwd : print the current/working directory&lt;/li&gt;
&lt;li&gt;mkdir : make/create directory&lt;/li&gt;
&lt;li&gt;rmdir : remove the empty directory&lt;/li&gt;
&lt;li&gt;rm : remove/delete file&lt;/li&gt;
&lt;li&gt;mv : rename or move a file/directory&lt;/li&gt;
&lt;li&gt;man : Manual pages for shell commands&lt;/li&gt;
&lt;li&gt;cp : Copy Files&lt;/li&gt;
&lt;li&gt;passwd : Change password for user&lt;/li&gt;
&lt;li&gt;tar : Creates and extracts files from a tape or disk archive&lt;/li&gt;
&lt;li&gt;find :  find searches the file located at /&lt;/li&gt;
&lt;li&gt;grep :  print lines matching a pattern&lt;/li&gt;
&lt;li&gt;chown :  change file owner and group&lt;/li&gt;
&lt;li&gt;chgrp :  change group ownership&lt;/li&gt;
&lt;li&gt;chmod :  change file mode bits&lt;/li&gt;
&lt;li&gt;ifconfig :  configure a network interface&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;參考資料:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://help.ubuntu.com/lts/serverguide/serverguide.pdf"&gt;https://help.ubuntu.com/lts/serverguide/serverguide.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ecourts.nic.in/2/mannual/admin_manual.pdf"&gt;http://ecourts.nic.in/2/mannual/admin_manual.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.lib.sun.ac.za/images/7/7b/Ubuntu-desktop.pdf"&gt;http://wiki.lib.sun.ac.za/images/7/7b/Ubuntu-desktop.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://askubuntu.com/questions/154121/why-wont-remmina-connect-to-windows-7-remote-desktop"&gt;http://askubuntu.com/questions/154121/why-wont-remmina-connect-to-windows-7-remote-desktop&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="Ubuntu"></category><category term="Mechanical Design"></category></entry></feed>